{"version":3,"sources":["components/Search/index.jsx","components/Search/Search.jsx","components/Task/index.jsx","components/Task/Task.jsx","contacts/index.jsx","App.js","reportWebVitals.js","index.js"],"names":["Search","handleInputChange","addInputValue","handleAddClick","clickSearchTask","error","className","TextField","onChange","id","label","variant","value","Button","color","size","onClick","Task","handleCheckClick","task_text","itemId","task_done","handleDeleteClick","ListItem","dense","button","ListItemIcon","Checkbox","edge","checked","tabIndex","disableRipple","inputProps","ListItemText","primary","ListItemSecondaryAction","IconButton","aria-label","tasks","task_id","App","props","state","result","isSearched","searching","bind","filterTaskDone","activateLocalStorage","updateLocalStorage","event","this","setState","target","inputField","document","querySelectorAll","console","log","length","setAttribute","oldResult","task","uuidv4","twoResult","filter","item","task_undone","updateResult","items","valLowCase","toLowerCase","searchArray","includes","localStorage","getItem","JSON","parse","setItem","stringify","List","map","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.ceddd237.chunk.js","sourcesContent":["import Search from './Search';\r\n\r\nexport default Search;","import {\r\n    Button,\r\n    TextField,\r\n} from '@material-ui/core';\r\n\r\n\r\n\r\nimport './style.css';\r\n\r\nconst Search = ({\r\n    handleInputChange,\r\n    addInputValue,\r\n    handleAddClick,\r\n    clickSearchTask,\r\n    error\r\n    }) => {\r\n\r\n    return ( \r\n        <section className=\"search\">\r\n            <div className=\"container\">\r\n                <TextField onChange={handleInputChange} id=\"search_textFiled outlined-basic\" label=\"Search or add task\" variant=\"outlined\" value={addInputValue}  />\r\n                <Button variant=\"contained\" color=\"primary\" size=\"large\" onClick={handleAddClick}>Add task</Button>\r\n                <Button variant=\"contained\" color=\"primary\" size=\"large\" onClick={clickSearchTask}>Search task</Button>\r\n            \r\n        \r\n\r\n            </div>\r\n            <div></div>\r\n        </section>\r\n    );\r\n}\r\n \r\nexport default Search;","import Task from './Task';\r\n\r\nexport default Task;","import List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\n\r\nconst Task = ({handleCheckClick,task_text,itemId,task_done,handleDeleteClick}) => {\r\n    return ( \r\n        <ListItem   dense button >\r\n            <ListItemIcon >\r\n              <Checkbox onClick={handleCheckClick}\r\n                edge=\"start\"\r\n                checked={task_done}\r\n                tabIndex={-1}\r\n                disableRipple\r\n                inputProps={{ 'aria-labelledby': itemId }}\r\n              />\r\n            </ListItemIcon>\r\n            <ListItemText id={itemId} primary={task_text}/>\r\n            <ListItemSecondaryAction onClick={handleDeleteClick}>\r\n              <IconButton edge=\"end\" aria-label=\"cancel\">\r\n                <CancelIcon />\r\n              </IconButton>\r\n            </ListItemSecondaryAction>\r\n          </ListItem>\r\n     );\r\n}\r\n \r\nexport default Task;","import { TransitEnterexitTwoTone } from \"@material-ui/icons\";\r\n\r\nconst tasks = [\r\n    {\r\n        task_id: 1,\r\n        task_text: 'Сделать домашнюю работу',\r\n        task_done: false \r\n    },\r\n    {\r\n        task_id: 2,\r\n        task_text: 'Сходить купить смеситель',\r\n        task_done: false,\r\n    },\r\n    {\r\n        task_id: 3,\r\n        task_text: 'Написать todo-app',\r\n        task_done: false,\r\n    },\r\n    {\r\n        task_id: 4,\r\n        task_text: 'Начать писать приложение через create-react-app',\r\n        task_done: false\r\n    }\r\n];\r\nexport default tasks;","import React, { Component } from 'react';\nimport List from '@material-ui/core/List'\nimport {\n  Search,\n  Task\n} from './components'\nimport tasks from './contacts/index';\nimport './App.css';\nimport { v4 as uuidv4} from 'uuid';\n\nclass App  extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { \n      result: tasks,\n      addInputValue: '',\n      isSearched: [],\n      searching: false,\n      error: ' ',\n    }\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.handleAddClick = this.handleAddClick.bind(this);\n    this.handleCheckClick = this.handleCheckClick.bind(this);\n    this.filterTaskDone = this.filterTaskDone.bind(this);\n    this.handleDeleteClick = this.handleDeleteClick.bind(this);\n    this.clickSearchTask = this.clickSearchTask.bind(this);\n    this.activateLocalStorage = this.activateLocalStorage.bind(this);\n    this.updateLocalStorage = this.updateLocalStorage.bind(this)\n  }\n\n  //inputChanges\n  handleInputChange(event) {\n    this.setState({\n      addInputValue: event.target.value\n    })\n  }\n  handleAddClick(value) {\n    const {result} = this.state;\n    const inputField = document.querySelectorAll('.MuiInputBase-input')[0];\n\n    console.log(value.length)\n    if (value.length === 0) {\n      inputField.setAttribute('error',true)\n    }else {\n      let oldResult = result;\n\n      const task = [{\n        task_id: uuidv4(),\n        task_text: value,\n        task_done: false,\n      }]\n  \n      let twoResult = [...oldResult,...task];\n  \n      let task_done = twoResult.filter(item => item.task_done === true);\n      let task_undone = twoResult.filter(item => item.task_done === false);\n      \n      this.setState({\n        result: [...task_undone,...task_done]\n      })\n    }\n  }\n  handleCheckClick(id) {\n    const {result} = this.state;\n\n    let item =  result.filter(item => item.task_id === id);\n    let updateResult = result.filter(item => item.task_id !== id);\n\n\n    item[0].task_done = !item[0].task_done;\n\n    this.setState({\n      result: [...updateResult,...item]\n    })\n\n    this.filterTaskDone()\n\n  }\n  handleDeleteClick(id) {\n    const {result} = this.state;\n\n    let items = result.filter(item => item.task_id !== id);\n\n    this.setState({\n      result: items\n    })\n\n  }\n  filterTaskDone() {\n    let {result} = this.state;\n\n\n    let task_done = this.state.result.filter(item => item.task_done === true);\n    let task_undone = this.state.result.filter(item => item.task_done === false);\n\n    this.setState({\n      result: [...task_undone,...task_done]\n    })\n  }\n  clickSearchTask(value) {\n    const {result, searching} = this.state;\n\n    let valLowCase = value.toLowerCase();\n    let searchArray = result.filter(item => item.task_text.toLowerCase().includes(valLowCase));\n\n    if (value.length === 0) {\n      this.setState({\n        searching: false\n      })\n    }else {\n      this.setState({\n        searching: true\n      })\n    }\n    \n    if (searchArray) {\n      this.setState({\n        isSearched: searchArray\n      })\n    }else {\n      this.setState({\n        isSearched: []\n      })\n    }\n\n\n  }\n  activateLocalStorage() {\n    const {result} = this.state;\n\n    if (localStorage.getItem('result')) {\n      this.setState({\n        result: JSON.parse(localStorage.getItem('result'))\n      })\n    }else {\n      localStorage.setItem('result', JSON.stringify(result))\n    }\n  }\n  updateLocalStorage(value) {\n    localStorage.setItem('result', JSON.stringify(value));\n  }\n\n  componentDidMount() {\n    this.activateLocalStorage();\n  }\n  \n\n  componentDidUpdate() {\n    const {result} = this.state;\n\n    this.updateLocalStorage(result);\n  }\n\n  render() { \n    const {\n      addInputValue,\n      result,\n      searching,\n      isSearched,\n      error\n    } = this.state;\n\n    return ( \n      <div className=\"App\">\n        <h1>Todos-App</h1>\n        <Search \n          handleInputChange={this.handleInputChange} \n          addInputValue={addInputValue}\n          handleAddClick={() => this.handleAddClick(addInputValue)}\n          clickSearchTask={() => this.clickSearchTask(addInputValue)}\n          error={error}\n        />\n        <div className=\"container__items\">\n          {\n            result.length !== 0 ? (\n              <List>\n            {\n              (!searching) ? result.map(item => {\n                const itemId = `checkbox-list-label-${item.task_id}`;\n                return (\n                  <Task \n                    key={item.task_id} \n                    itemId={itemId} \n                    task_text={item.task_text} \n                    handleCheckClick={() => this.handleCheckClick(item.task_id)}\n                    task_done={item.task_done}\n                    handleDeleteClick={() => this.handleDeleteClick(item.task_id)}\n                  /> \n                )\n              }) : (isSearched.length === 0) ? <h3>Ничего не найдено!</h3> : isSearched.map(item => {\n                const itemId = `checkbox-list-label-${item.task_id}`;\n                return (\n                  <Task \n                    key={item.task_id} \n                    itemId={itemId} \n                    task_text={item.task_text} \n                    handleCheckClick={() => this.handleCheckClick(item.task_id)}\n                    task_done={item.task_done}\n                    handleDeleteClick={() => this.handleDeleteClick(item.task_id)}\n                  /> \n                )\n              })\n            }  \n          </List>\n            ) : <h3>Вы всё сделали ?</h3>\n           }\n          \n        </div>\n      </div>\n     );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}