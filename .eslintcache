[{"F:\\React\\todos-app\\src\\index.js":"1","F:\\React\\todos-app\\src\\App.js":"2","F:\\React\\todos-app\\src\\reportWebVitals.js":"3","F:\\React\\todos-app\\src\\components\\index.jsx":"4","F:\\React\\todos-app\\src\\components\\Search\\index.jsx":"5","F:\\React\\todos-app\\src\\components\\Search\\Search.jsx":"6","F:\\React\\todos-app\\src\\components\\Task\\index.jsx":"7","F:\\React\\todos-app\\src\\components\\Task\\Task.jsx":"8","F:\\React\\todos-app\\src\\contacts\\index.jsx":"9"},{"size":500,"mtime":499162500000,"results":"10","hashOfConfig":"11"},{"size":5846,"mtime":1608209705535,"results":"12","hashOfConfig":"11"},{"size":362,"mtime":499162500000,"results":"13","hashOfConfig":"11"},{"size":174,"mtime":1607980709265,"results":"14","hashOfConfig":"11"},{"size":56,"mtime":1607958652445,"results":"15","hashOfConfig":"11"},{"size":856,"mtime":1608136928454,"results":"16","hashOfConfig":"11"},{"size":50,"mtime":1607980682650,"results":"17","hashOfConfig":"11"},{"size":1260,"mtime":1608053901366,"results":"18","hashOfConfig":"11"},{"size":642,"mtime":1608124753378,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"atnxlc",{"filePath":"23","messages":"24","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"22"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"22"},"F:\\React\\todos-app\\src\\index.js",[],["43","44"],"F:\\React\\todos-app\\src\\App.js",["45","46"],"import React, { Component } from 'react';\nimport List from '@material-ui/core/List'\nimport {\n  Search,\n  Task\n} from './components'\nimport tasks from './contacts/index';\nimport './App.css';\nimport { v4 as uuidv4} from 'uuid';\n\nclass App  extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { \n      result: tasks,\n      addInputValue: '',\n      isSearched: [],\n      searching: false,\n      error: ' ',\n      task_done_t: 0,\n      task_done_f: 0\n    }\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.handleAddClick = this.handleAddClick.bind(this);\n    this.handleCheckClick = this.handleCheckClick.bind(this);\n    this.filterTaskDone = this.filterTaskDone.bind(this);\n    this.handleDeleteClick = this.handleDeleteClick.bind(this);\n    this.clickSearchTask = this.clickSearchTask.bind(this);\n    this.activateLocalStorage = this.activateLocalStorage.bind(this);\n    this.updateLocalStorage = this.updateLocalStorage.bind(this)\n  }\n\n  //inputChanges\n  handleInputChange(event) {\n    this.setState({\n      addInputValue: event.target.value\n    })\n  }\n  handleAddClick(value) {\n    const {result} = this.state;\n    const inputField = document.querySelectorAll('.MuiInputBase-input')[0];\n\n    console.log(value.length)\n    if (value.length === 0) {\n      inputField.setAttribute('error',true)\n    }else {\n      let oldResult = result;\n\n      const task = [{\n        task_id: uuidv4(),\n        task_text: value,\n        task_done: false,\n      }]\n  \n      let twoResult = [...oldResult,...task];\n  \n      let task_done = twoResult.filter(item => item.task_done === true);\n      let task_undone = twoResult.filter(item => item.task_done === false);\n      \n      this.setState({\n        result: [...task_undone,...task_done]\n      })\n    }\n  }\n  handleCheckClick(id) {\n    const {result} = this.state;\n\n    let item =  result.filter(item => item.task_id === id);\n    let updateResult = result.filter(item => item.task_id !== id);\n\n\n    item[0].task_done = !item[0].task_done;\n\n    this.setState({\n      result: [...updateResult,...item]\n    })\n\n    this.filterTaskDone()\n\n  }\n  handleDeleteClick(id) {\n    const {result} = this.state;\n\n    let items = result.filter(item => item.task_id !== id);\n\n    this.setState({\n      result: items\n    })\n\n  }\n  filterTaskDone() {\n    let {result} = this.state;\n\n\n    let task_done = this.state.result.filter(item => item.task_done === true);\n    let task_undone = this.state.result.filter(item => item.task_done === false);\n\n    this.setState({\n      result: [...task_undone,...task_done]\n    })\n  }\n  clickSearchTask(value) {\n    const {result, searching} = this.state;\n\n    let valLowCase = value.toLowerCase();\n    let searchArray = result.filter(item => item.task_text.toLowerCase().includes(valLowCase));\n\n    if (value.length === 0) {\n      this.setState({\n        searching: false\n      })\n    }else {\n      this.setState({\n        searching: true\n      })\n    }\n    \n    if (searchArray) {\n      this.setState({\n        isSearched: searchArray\n      })\n    }else {\n      this.setState({\n        isSearched: []\n      })\n    }\n\n\n  }\n  activateLocalStorage() {\n    const {result} = this.state;\n\n    if (localStorage.getItem('result')) {\n      this.setState({\n        result: JSON.parse(localStorage.getItem('result'))\n      })\n    }else {\n      localStorage.setItem('result', JSON.stringify(result))\n    }\n  }\n  updateLocalStorage(value) {\n    localStorage.setItem('result', JSON.stringify(value));\n  }\n\n  componentDidMount() {\n    this.activateLocalStorage();\n  }\n  \n\n  componentDidUpdate() {\n    const {result} = this.state;\n\n    this.updateLocalStorage(result);\n  }\n\n  render() { \n    const {\n      addInputValue,\n      result,\n      searching,\n      isSearched,\n      error\n    } = this.state;\n\n    return ( \n      <div className=\"App\">\n        <h1>Todo-App</h1>\n        <Search \n          handleInputChange={this.handleInputChange} \n          addInputValue={addInputValue}\n          handleAddClick={() => this.handleAddClick(addInputValue)}\n          clickSearchTask={() => this.clickSearchTask(addInputValue)}\n          error={error}\n        />\n        <div className=\"container__items\">\n          {\n            result.length !== 0 ? (\n              <List>\n            {\n              (!searching) ? result.map(item => {\n                const itemId = `checkbox-list-label-${item.task_id}`;\n                return (\n                  <Task \n                    key={item.task_id} \n                    itemId={itemId} \n                    task_text={item.task_text} \n                    handleCheckClick={() => this.handleCheckClick(item.task_id)}\n                    task_done={item.task_done}\n                    handleDeleteClick={() => this.handleDeleteClick(item.task_id)}\n                  /> \n                )\n              }) : (isSearched.length === 0) ? <h3>Ничего не найдено!</h3> : isSearched.map(item => {\n                const itemId = `checkbox-list-label-${item.task_id}`;\n                return (\n                  <Task \n                    key={item.task_id} \n                    itemId={itemId} \n                    task_text={item.task_text} \n                    handleCheckClick={() => this.handleCheckClick(item.task_id)}\n                    task_done={item.task_done}\n                    handleDeleteClick={() => this.handleDeleteClick(item.task_id)}\n                  /> \n                )\n              })\n            }  \n          </List>\n            ) : <h3>Вы всё сделали ?</h3>\n           }\n          \n        </div>\n        <div className=\"container\">\n          <p>Выполнено: {result.filter(item => item.task_done === true).length} | Не выполнено: {result.filter(item => item.task_done === false).length}</p>\n        </div>\n      </div>\n     );\n  }\n}\n\nexport default App;\n","F:\\React\\todos-app\\src\\reportWebVitals.js",[],"F:\\React\\todos-app\\src\\components\\index.jsx",[],"F:\\React\\todos-app\\src\\components\\Search\\index.jsx",[],"F:\\React\\todos-app\\src\\components\\Search\\Search.jsx",[],"F:\\React\\todos-app\\src\\components\\Task\\index.jsx",[],"F:\\React\\todos-app\\src\\components\\Task\\Task.jsx",["47"],"import List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\n\r\nconst Task = ({handleCheckClick,task_text,itemId,task_done,handleDeleteClick}) => {\r\n    return ( \r\n        <ListItem   dense button >\r\n            <ListItemIcon >\r\n              <Checkbox onClick={handleCheckClick}\r\n                edge=\"start\"\r\n                checked={task_done}\r\n                tabIndex={-1}\r\n                disableRipple\r\n                inputProps={{ 'aria-labelledby': itemId }}\r\n              />\r\n            </ListItemIcon>\r\n            <ListItemText id={itemId} primary={task_text}/>\r\n            <ListItemSecondaryAction onClick={handleDeleteClick}>\r\n              <IconButton edge=\"end\" aria-label=\"cancel\">\r\n                <CancelIcon />\r\n              </IconButton>\r\n            </ListItemSecondaryAction>\r\n          </ListItem>\r\n     );\r\n}\r\n \r\nexport default Task;",["48","49"],"F:\\React\\todos-app\\src\\contacts\\index.jsx",["50"],"import { TransitEnterexitTwoTone } from \"@material-ui/icons\";\r\n\r\nconst tasks = [\r\n    {\r\n        task_id: 1,\r\n        task_text: 'Сделать домашнюю работу',\r\n        task_done: false \r\n    },\r\n    {\r\n        task_id: 2,\r\n        task_text: 'Сходить купить смеситель',\r\n        task_done: false,\r\n    },\r\n    {\r\n        task_id: 3,\r\n        task_text: 'Написать todo-app',\r\n        task_done: false,\r\n    },\r\n    {\r\n        task_id: 4,\r\n        task_text: 'Начать писать приложение через create-react-app',\r\n        task_done: false\r\n    }\r\n];\r\nexport default tasks;",{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","severity":1,"message":"56","line":92,"column":10,"nodeType":"57","messageId":"58","endLine":92,"endColumn":16},{"ruleId":"55","severity":1,"message":"59","line":103,"column":20,"nodeType":"57","messageId":"58","endLine":103,"endColumn":29},{"ruleId":"55","severity":1,"message":"60","line":1,"column":8,"nodeType":"57","messageId":"58","endLine":1,"endColumn":12},{"ruleId":"51","replacedBy":"61"},{"ruleId":"53","replacedBy":"62"},{"ruleId":"55","severity":1,"message":"63","line":1,"column":10,"nodeType":"57","messageId":"58","endLine":1,"endColumn":33},"no-native-reassign",["64"],"no-negated-in-lhs",["65"],"no-unused-vars","'result' is assigned a value but never used.","Identifier","unusedVar","'searching' is assigned a value but never used.","'List' is defined but never used.",["64"],["65"],"'TransitEnterexitTwoTone' is defined but never used.","no-global-assign","no-unsafe-negation"]